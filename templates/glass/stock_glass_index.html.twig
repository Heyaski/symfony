{% extends 'base.html.twig' %}

{% block title %}Биржевой стакан - {{ stock.name }}{% endblock %}

{% block body %}
<div class="glass-container">
    <h1 class="glass-title">Биржевой стакан {{ stock.name }} ({{ stock.ticker }})</h1>
    
    <div class="glass-sections">
        <div class="glass-section buy-section">
            <h2>Заявки на покупку</h2>
            <div class="applications-list">
                {% set buyExists = false %}
                {% for application in stock.getApplications() %}
                    {% if application.action == constant('App\\Enums\\ActionEnum::BUY') %}
                        {% set buyExists = true %}
                        <div class="application-card buy">
                            <div class="application-details">
                                <div class="detail-group">
                                    <span class="label">Количество:</span>
                                    <span class="value">{{ application.quantity }} шт.</span>
                                </div>
                                <div class="detail-group">
                                    <span class="label">Цена:</span>
                                    <span class="value">{{ application.price }}₽</span>
                                </div>
                                <div class="detail-group total">
                                    <span class="label">Сумма:</span>
                                    <span class="value">{{ application.total }}₽</span>
                                </div>
                                <div class="action-buttons">
                                    {% if application.user.id != app.user.id %}
                                        <button onclick="showSellModal({
                                            id: {{ application.id }},
                                            quantity: {{ application.quantity }},
                                            price: {{ application.price }},
                                            stockId: {{ application.stock.id }}
                                        })" class="action-btn sell-btn">
                                            <i class="fas fa-dollar-sign"></i> Продать
                                        </button>
                                    {% else %}
                                        <span class="your-application">Ваша заявка</span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
                {% if not buyExists %}
                    <p class="no-applications">Нет активных заявок на покупку</p>
                {% endif %}
            </div>
        </div>

        <div class="glass-section sell-section">
            <h2>Заявки на продажу</h2>
            <div class="applications-list">
                {% set sellExists = false %}
                {% for application in stock.getApplications() %}
                    {% if application.action == constant('App\\Enums\\ActionEnum::SELL') %}
                        {% set sellExists = true %}
                        <div class="application-card sell">
                            <div class="application-details">
                                <div class="detail-group">
                                    <span class="label">Количество:</span>
                                    <span class="value">{{ application.quantity }} шт.</span>
                                </div>
                                <div class="detail-group">
                                    <span class="label">Цена:</span>
                                    <span class="value">{{ application.price }}₽</span>
                                </div>
                                <div class="detail-group total">
                                    <span class="label">Сумма:</span>
                                    <span class="value">{{ application.total }}₽</span>
                                </div>
                                <div class="action-buttons">
                                    {% if application.user.id != app.user.id %}
                                        <button onclick="showBuyModal({
                                            id: {{ application.id }},
                                            quantity: {{ application.quantity }},
                                            price: {{ application.price }},
                                            stockId: {{ application.stock.id }}
                                        })" class="action-btn buy-btn">
                                            <i class="fas fa-shopping-cart"></i> Купить
                                        </button>
                                    {% else %}
                                        <span class="your-application">Ваша заявка</span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
                {% if not sellExists %}
                    <p class="no-applications">Нет активных заявок на продажу</p>
                {% endif %}
            </div>
        </div>
    </div>
    
    <div class="actions">
    {% if is_granted('ROLE_ADMIN') %}
        <a href="{{ path('app_stock_show', {'id': stock.id}) }}" class="btn btn-secondary">Вернуться к информации о бумаге</a>
    {% endif %}
        <a href="{{ path('app_profile') }}" class="btn btn-primary">Создать заявку</a>
    </div>
</div>

<div id="tradeModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle"></h2>
        <form id="tradeForm" onsubmit="executeTrade(event)">
            <input type="hidden" id="applicationId" name="applicationId">
            <input type="hidden" id="tradeType" name="tradeType">
            <div class="form-group">
                <label for="portfolio-select">Выберите портфель:</label>
                <select id="portfolio-select" name="portfolioId" required>
                    {% for portfolio in app.user.portfolios %}
                        <option value="{{ portfolio.id }}">Портфель #{{ portfolio.id }} ({{ portfolio.balance }} ₽)</option>
                    {% endfor %}
                </select>
            </div>
            <div class="form-group">
                <label for="quantity">Количество:</label>
                <input type="number" id="quantity" name="quantity" min="1" required>
                <small id="maxQuantity"></small>
            </div>
            <div class="form-buttons">
                <button type="button" class="btn btn-secondary" onclick="closeModal()">Отменить</button>
                <button type="submit" class="btn btn-primary">Подтвердить</button>
            </div>
        </form>
    </div>
</div>

<style>
.glass-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1rem;
}

.glass-title {
    color: #fff;
    text-align: center;
    margin-bottom: 2rem;
    font-size: 2rem;
}

.glass-sections {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
}

.glass-section {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    padding: 1.5rem;
}

.glass-section h2 {
    color: #fff;
    text-align: center;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
}

.applications-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.application-card {
    border-radius: 8px;
    padding: 1rem;
    transition: transform 0.2s;
}

.application-card:hover {
    transform: translateY(-2px);
}

.application-card.buy {
    background: rgba(46, 204, 113, 0.2);
    border: 1px solid rgba(46, 204, 113, 0.3);
}

.application-card.sell {
    background: rgba(231, 76, 60, 0.2);
    border: 1px solid rgba(231, 76, 60, 0.3);
}

.application-details {
    display: grid;
    gap: 0.5rem;
}

.detail-group {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #fff;
}

.detail-group.total {
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    font-weight: bold;
}

.label {
    color: rgba(255, 255, 255, 0.8);
}

.value {
    font-weight: bold;
}

.no-applications {
    text-align: center;
    color: rgba(255, 255, 255, 0.6);
    padding: 2rem;
    font-style: italic;
}

.actions {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
}

.btn {
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s ease;
    color: #fff;
}

.btn-secondary {
    background: rgba(127, 140, 141, 0.8);
}

.btn-primary {
    background: rgba(52, 152, 219, 0.8);
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    opacity: 1;
}

@media (max-width: 768px) {
    .glass-sections {
        grid-template-columns: 1fr;
    }
}

.action-buttons {
    margin-top: 1rem;
    display: flex;
    gap: 0.5rem;
}

.action-btn {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s;
}

.buy-btn {
    background-color: #2ecc71;
    color: white;
}

.sell-btn {
    background-color: #e74c3c;
    color: white;
}

.action-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    z-index: 1000;
}

.modal-content {
    background: white;
    margin: 15% auto;
    padding: 2rem;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    position: relative;
}

.close {
    position: absolute;
    right: 1rem;
    top: 0.5rem;
    font-size: 1.5rem;
    cursor: pointer;
}

.form-group {
    margin-bottom: 1rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: #2c3e50;
}

.form-group input {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.form-group small {
    display: block;
    color: #7f8c8d;
    margin-top: 0.25rem;
}

.form-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    margin-top: 1.5rem;
}

.your-application {
    color: rgba(255, 255, 255, 0.6);
    font-style: italic;
    padding: 0.5rem;
    text-align: center;
    display: block;
}
</style>

<script>
let currentApplication = null;

function showSellModal(application) {
    currentApplication = application;
    const modal = document.getElementById('tradeModal');
    const title = document.getElementById('modalTitle');
    const quantity = document.getElementById('quantity');
    const maxQuantity = document.getElementById('maxQuantity');
    const applicationId = document.getElementById('applicationId');
    const tradeType = document.getElementById('tradeType');

    title.textContent = 'Продажа ценных бумаг';
    quantity.max = application.quantity;
    maxQuantity.textContent = `Максимальное количество: ${application.quantity}`;
    applicationId.value = application.id;
    tradeType.value = 'sell';

    modal.style.display = 'block';
}

function showBuyModal(application) {
    currentApplication = application;
    const modal = document.getElementById('tradeModal');
    const title = document.getElementById('modalTitle');
    const quantity = document.getElementById('quantity');
    const maxQuantity = document.getElementById('maxQuantity');
    const applicationId = document.getElementById('applicationId');
    const tradeType = document.getElementById('tradeType');

    title.textContent = 'Покупка ценных бумаг';
    quantity.max = application.quantity;
    maxQuantity.textContent = `Максимальное количество: ${application.quantity}`;
    applicationId.value = application.id;
    tradeType.value = 'buy';

    modal.style.display = 'block';
}

function closeModal() {
    document.getElementById('tradeModal').style.display = 'none';
    document.getElementById('tradeForm').reset();
}

async function executeTrade(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);
    
    try {
        const response = await fetch("{{ path('app_execute_trade') }}", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(formData)
        });

        const text = await response.text();
        
        if (response.ok) {
            alert('Операция выполнена успешно');
            window.location.reload();
        } else {
            alert('Ошибка: ' + text);
        }
    } catch (error) {
        alert('Произошла ошибка при выполнении операции');
        console.error(error);
    }
}

// Закрытие модального окна при клике вне его
window.onclick = function(event) {
    const modal = document.getElementById('tradeModal');
    if (event.target === modal) {
        closeModal();
    }
}
</script>
{% endblock %}